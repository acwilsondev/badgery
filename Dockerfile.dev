FROM node:20-slim

WORKDIR /app

# Install dependencies needed for development
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 remixuser && \
    chown -R remixuser:nodejs /app

# Copy package files
COPY --chown=remixuser:nodejs package*.json ./

# Switch to non-root user
USER remixuser

# Install all dependencies (including devDependencies)
RUN npm install

# Application will be mounted at runtime via docker-compose
# Command will be specified in docker-compose.yml

# Default environment settings
ENV NODE_ENV=development \
    PORT=3000 \
    LOG_LEVEL=debug

# Expose ports for the application and Vite dev server
EXPOSE 3000 5173

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Development Dockerfile for Badgery
# Based on Node 20 with hot reloading support for Remix Vite development server

FROM node:20-slim

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy dependency files
COPY package.json package-lock.json ./

# Install all dependencies including development ones
RUN npm ci

# Note: Source code will be mounted as a volume in docker-compose.yml
# This enables hot reloading without rebuilding the container

# Expose port for Remix Vite dev server
EXPOSE 5173

# Set environment variable to development
ENV NODE_ENV=development

# Command to start the development server
CMD ["npm", "run", "dev"]

